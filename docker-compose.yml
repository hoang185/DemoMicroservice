version: '3.4'

networks:
  backend:
  frontend:

services:

  customerwebapi:
    container_name: customer-api
    image: ${DOCKER_REGISTRY-}customerwebapi
    build:
      context: .
      dockerfile: CustomerWebApi\Dockerfile
    networks: 
      - backend
    environment:
      - DB_HOST=productdb
      - DB_NAME=dms_customer
      - DB_SA_PASSWORD=123456789@

  productdb:
    container_name: productdb
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment: 
      - ACCEPT_EULA=Y
      - SA_PASSWORD=123456789@
    networks:
      - backend
    ports:
      - 18001:1433
 
  productwebapi:
    container_name: product-api
    image: ${DOCKER_REGISTRY-}productwebapi
    build:
      context: .
      dockerfile: ProductWebApi/Dockerfile
    networks:
      - backend
    environment:
      - DB_HOST=productdb
      - DB_NAME=dms_product
      - DB_SA_PASSWORD=123456789@

  apigateway:
    container_name: api-gateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - 8001:80
    networks:
      - backend
      - frontend


  blazorserverwebui:
    container_name: blazor-web-ui
    image: ${DOCKER_REGISTRY-}blazorserverwebui
    build:
      context: .
      dockerfile: BlazorServerWebUI/Dockerfile
    ports:
      - 8002:80
    networks:
      - frontend

